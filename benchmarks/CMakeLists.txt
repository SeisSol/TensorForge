cmake_minimum_required(VERSION 3.5)
project(bench)

set(REFERENCE_IMPL "GEMMGEN" CACHE STRING "size of the floating point data type")
set_property(CACHE REFERENCE_IMPL PROPERTY STRINGS "GEMMGEN" "OPENBLAS")

# generated by python (locates in the build)
include(${PROJECT_SOURCE_DIR}/tmp/cmake_params.cmake)

find_package(CUDA REQUIRED)
set(CUDA_NVCC_FLAGS ${CUDA_NVCC_FLAGS};
        -std=c++11;
        -arch=${SM_ARCH};
#        -restrict;
        -res-usage;
        -O3;
#        -g;
        -lineinfo;
        -Xptxas -v;
        -maxrregcount 90;
        -DREAL_SIZE=${REAL_SIZE})

cuda_add_executable(${CMAKE_PROJECT_NAME} ./tmp/main.cu
                                          ./tmp/kernel.cu
                                          ./common/aux.cpp
                                          ./common/gemm.cpp
                                          ../chainforge/include/chainforge_aux.cu)
target_include_directories(${CMAKE_PROJECT_NAME} PRIVATE ./common
                                                         ../chainforge/include)
target_compile_definitions(${CMAKE_PROJECT_NAME} PRIVATE "CONCRETE_CPU_BACKEND=${REFERENCE_IMPL}"
                                                         "REAL_SIZE=${REAL_SIZE}")

if (${REFERENCE_IMPL} STREQUAL "OPENBLAS")
    find_package(OpenBLAS REQUIRED)
    target_include_directories(${CMAKE_PROJECT_NAME} PRIVATE ${OpenBLAS_INCLUDE_DIRS})
    target_link_libraries(${CMAKE_PROJECT_NAME} ${OpenBLAS_LIBRARIES})
endif()